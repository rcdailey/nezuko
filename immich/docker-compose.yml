name: immich

networks:
  reverse_proxy:
    external: true
    driver: overlay
  borgmatic_backup:
    external: true

x-logging: &logging
  driver: json-file
  options:
    max-file: "1"
    max-size: "50m"

services:
  server:
    image: ghcr.io/immich-app/immich-server:v1.132.3
    restart: unless-stopped
    logging: *logging
    depends_on: [redis, database]
    env_file: [.env]
    user: $DOCKER_UID:$DOCKER_GID
    security_opt: [no-new-privileges:true]
    cap_drop: [NET_RAW]
    # ports: [2283:2283]
    networks:
      default:
      reverse_proxy:
        aliases: [immich]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/user/photos/immich:/usr/src/app/upload
      # Override some paths for SSD performance
      - ./upload/thumbs:/usr/src/app/upload/thumbs
      - ./upload/profile:/usr/src/app/upload/profile
    labels:
      - swag=enable
      - swag_url=photos.*

  machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:v1.131.2
    restart: unless-stopped
    logging: *logging
    env_file: [.env]
    user: $DOCKER_UID:$DOCKER_GID
    security_opt: [no-new-privileges:true]
    cap_drop: [NET_RAW]
    volumes:
      - ./ml/.config:/.config
      - ./ml/.cache:/.cache
      - ./ml/cache:/cache

  redis:
    image: redis
    restart: unless-stopped
    logging: *logging
    user: $DOCKER_UID:$DOCKER_GID
    security_opt: [no-new-privileges:true]
    cap_drop: [NET_RAW]
    healthcheck:
      test: redis-cli ping || exit 1
    volumes:
      - ./redis:/data

  database:
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    restart: unless-stopped
    networks:
      default:
      borgmatic_backup:
        aliases: [immich-database]
    logging: *logging
    env_file: [.env]
    user: $DOCKER_UID:$DOCKER_GID
    security_opt: [no-new-privileges:true]
    cap_drop: [NET_RAW]
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      # start_interval: 30s # Requires docker v25
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
