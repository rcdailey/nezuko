#
# WARNING: To install Immich, follow our guide: https://immich.app/docs/install/docker-compose
#
# Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.

networks:
  reverse_proxy:
    external: true
    driver: overlay

x-logging: &logging
  driver: json-file
  options:
    max-file: "1"
    max-size: "50m"

volumes:
  model-cache:

services:
  server:
    image: ghcr.io/immich-app/immich-server:v1.129.0
    restart: unless-stopped
    logging: *logging
    depends_on: [redis, database]
    env_file: [.env]
    # ports: [2283:2283]
    networks:
      default:
      reverse_proxy:
        aliases: [immich]
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./upload:/usr/src/app/upload
      - /mnt/user/photos/immich/library:/usr/src/app/upload/library
      - /mnt/user/photos/immich/upload:/usr/src/app/upload/upload
      # - /mnt/user/photos/external:/photos:ro
    labels:
      - swag=enable
      - swag_url=photos.*

  machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:v1.129.0
    restart: unless-stopped
    logging: *logging
    env_file: [.env]
    volumes:
      - model-cache:/cache

  redis:
    image: redis
    restart: unless-stopped
    logging: *logging
    healthcheck:
      test: redis-cli ping || exit 1

  database:
    image: tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    restart: unless-stopped
    logging: *logging
    env_file: [.env]
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1;
        Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')";
        echo "checksum failure count is $$Chksum";
        [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      # start_interval: 30s # Requires docker v25
      start_period: 5m
    command: >-
      postgres
      -c shared_preload_libraries=vectors.so
      -c 'search_path="$$user", public, vectors'
      -c logging_collector=on
      -c max_wal_size=2GB
      -c shared_buffers=512MB
      -c wal_compression=on
